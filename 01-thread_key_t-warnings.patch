diff --git a/src/clnt_simple.c b/src/clnt_simple.c
index e66da6a..03336f0 100644
--- a/src/clnt_simple.c
+++ b/src/clnt_simple.c
@@ -104,9 +104,9 @@ rpc_call(host, prognum, versnum, procnum, inproc, in, outproc, out, nettype)
 	extern thread_key_t rpc_call_key;
 	extern mutex_t tsd_lock;
 
-	if (rpc_call_key == -1) {
+	if (rpc_call_key == (thread_key_t)(-1)) {
 		mutex_lock(&tsd_lock);
-		if (rpc_call_key == -1)
+		if (rpc_call_key == (thread_key_t)(-1))
 			thr_keycreate(&rpc_call_key, rpc_call_destroy);
 		mutex_unlock(&tsd_lock);
 	}
diff --git a/src/getnetconfig.c b/src/getnetconfig.c
index af4a484..5efbf89 100644
--- a/src/getnetconfig.c
+++ b/src/getnetconfig.c
@@ -136,10 +136,10 @@ __nc_error()
 	 * (including non-threaded programs), or if an allocation
 	 * fails.
 	 */
-	if (nc_key == -1) {
+	if (nc_key == (thread_key_t)(-1)) {
 		error = 0;
 		mutex_lock(&nc_lock);
-		if (nc_key == -1)
+		if (nc_key == (thread_key_t)(-1))
 			error = thr_keycreate(&nc_key, free);
 		mutex_unlock(&nc_lock);
 		if (error)
diff --git a/src/mt_misc.c b/src/mt_misc.c
index 4cba143..3286bd9 100644
--- a/src/mt_misc.c
+++ b/src/mt_misc.c
@@ -79,11 +79,11 @@ pthread_mutex_t	tsd_lock = PTHREAD_MUTEX_INITIALIZER;
 
 /* Library global tsd keys */
 thread_key_t clnt_broadcast_key;
-thread_key_t rpc_call_key = -1;
-thread_key_t tcp_key = -1;
-thread_key_t udp_key = -1;
-thread_key_t nc_key = -1;
-thread_key_t rce_key = -1;
+thread_key_t rpc_call_key = (thread_key_t)(-1);
+thread_key_t tcp_key = (thread_key_t)(-1);
+thread_key_t udp_key = (thread_key_t)(-1);
+thread_key_t nc_key = (thread_key_t)(-1);
+thread_key_t rce_key = (thread_key_t)(-1);
 
 /* xprtlist (svc_generic.c) */
 pthread_mutex_t	xprtlist_lock = PTHREAD_MUTEX_INITIALIZER;
@@ -101,7 +101,7 @@ __rpc_createerr()
 	struct rpc_createerr *rce_addr;
 
 	mutex_lock(&tsd_lock);
-	if (rce_key == -1)
+	if (rce_key == (thread_key_t)(-1))
 		thr_keycreate(&rce_key, free);
 	mutex_unlock(&tsd_lock);
 
@@ -122,17 +122,17 @@ __rpc_createerr()
 
 void tsd_key_delete(void)
 {
-	if (clnt_broadcast_key != -1)
+	if (clnt_broadcast_key != (thread_key_t)(-1))
 		thr_keydelete(clnt_broadcast_key);
-	if (rpc_call_key != -1)
+	if (rpc_call_key != (thread_key_t)(-1))
 		thr_keydelete(rpc_call_key);
-	if (tcp_key != -1)
+	if (tcp_key != (thread_key_t)(-1))
 		thr_keydelete(tcp_key);
-	if (udp_key != -1)
+	if (udp_key != (thread_key_t)(-1))
 		thr_keydelete(udp_key);
-	if (nc_key != -1)
+	if (nc_key != (thread_key_t)(-1))
 		thr_keydelete(nc_key);
-	if (rce_key != -1)
+	if (rce_key != (thread_key_t)(-1))
 		thr_keydelete(rce_key);
 	return;
 }
diff --git a/src/rpc_generic.c b/src/rpc_generic.c
index 541275c..d4f1283 100644
--- a/src/rpc_generic.c
+++ b/src/rpc_generic.c
@@ -228,16 +228,16 @@ __rpc_getconfip(nettype)
 	extern thread_key_t tcp_key, udp_key;
 	extern mutex_t tsd_lock;
 
-	if (tcp_key == -1) {
+	if (tcp_key == (thread_key_t)(-1)) {
 		mutex_lock(&tsd_lock);
-		if (tcp_key == -1)
+		if (tcp_key == (thread_key_t)(-1))
 			thr_keycreate(&tcp_key, free);
 		mutex_unlock(&tsd_lock);
 	}
 	netid_tcp = (char *)thr_getspecific(tcp_key);
-	if (udp_key == -1) {
+	if (udp_key == (thread_key_t)(-1)) {
 		mutex_lock(&tsd_lock);
-		if (udp_key == -1)
+		if (udp_key == (thread_key_t)(-1))
 			thr_keycreate(&udp_key, free);
 		mutex_unlock(&tsd_lock);
 	}
diff --git a/src/rpc_soc.c b/src/rpc_soc.c
index 709a8a8..bef5c2c 100644
--- a/src/rpc_soc.c
+++ b/src/rpc_soc.c
@@ -467,9 +467,9 @@ clnt_broadcast(prog, vers, proc, xargs, argsp, xresults, resultsp, eachresult)
 {
 	extern mutex_t tsd_lock;
 
-	if (clnt_broadcast_key == -1) {
+	if (clnt_broadcast_key == (thread_key_t)(-1)) {
 		mutex_lock(&tsd_lock);
-		if (clnt_broadcast_key == -1)
+		if (clnt_broadcast_key == (thread_key_t)(-1))
 			thr_keycreate(&clnt_broadcast_key, free);
 		mutex_unlock(&tsd_lock);
 	}
