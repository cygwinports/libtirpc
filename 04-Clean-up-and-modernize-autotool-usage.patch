diff --git a/Makefile.am b/Makefile.am
index 7f5f37b..f5d6062 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -1,3 +1,5 @@
+ACLOCAL_AMFLAGS = -I m4
+
 SUBDIRS = src man doc
 
 nobase_include_HEADERS = tirpc/netconfig.h \
diff --git a/configure.ac b/configure.ac
index 0f3ce42..28beb70 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1,9 +1,16 @@
-AC_INIT(libtirpc, 0.2.1)
-AM_INIT_AUTOMAKE(libtirpc, 0.2.1)
-AM_MAINTAINER_MODE
+AC_INIT([TI-RPC Library],
+	[0.2.1],
+	[libtirpc-devel@lists.sourceforge.net],
+	[libtirpc],
+	[http://nfsv4.bullopensource.org/doc/tirpc_rpcbind.php])
 AC_CONFIG_SRCDIR([src/auth_des.c])
+AM_INIT_AUTOMAKE
+AM_MAINTAINER_MODE
+AC_CONFIG_MACRO_DIR([m4])
 
-AC_ARG_ENABLE(gss,[  --enable-gss            Turn on gss api], [case "${enableval}" in
+AC_ARG_ENABLE([gss],
+	[AS_HELP_STRING([--enable-gss], [Turn on gss api])],
+	[case "${enableval}" in
         yes) gss=true ; AC_CHECK_LIB([gssapi],[gss_init_sec_context]) ;;
         no)  gss=false ;;
         *) AC_MSG_ERROR(bad value ${enableval} for --enable-gss) ;;
@@ -17,8 +24,7 @@ fi
 
 AC_PROG_CC
 AM_CONFIG_HEADER(config.h)
-AC_PROG_LIBTOOL
-##AC_PROG_RANLIB
+LT_INIT([win32-dll])
 AC_HEADER_DIRENT
 AC_PREFIX_DEFAULT(/usr)
 AC_CHECK_HEADERS([arpa/inet.h fcntl.h libintl.h limits.h locale.h netdb.h netinet/in.h stddef.h stdint.h stdlib.h string.h sys/ioctl.h sys/param.h sys/socket.h sys/time.h syslog.h unistd.h])
diff --git a/m4/.gitignore b/m4/.gitignore
new file mode 100644
index 0000000..464ba5c
--- /dev/null
+++ b/m4/.gitignore
@@ -0,0 +1,5 @@
+libtool.m4
+lt~obsolete.m4
+ltoptions.m4
+ltsugar.m4
+ltversion.m4
diff --git a/src/Makefile.am b/src/Makefile.am
index 7b002da..daa6202 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -40,9 +40,14 @@ lib_LTLIBRARIES = libtirpc.la
 # release number of your package. This is an abuse that only fosters
 # misunderstanding of the purpose of library versions."
 #
-libtirpc_la_LDFLAGS = -lnsl -lpthread -version-info 1:10:0
+libtirpc_la_LDFLAGS = -lnsl -lpthread -version-info 1:10:0 -no-undefined
 
-libtirpc_la_SOURCES = auth_none.c auth_unix.c authunix_prot.c bindresvport.c clnt_bcast.c \
+XDR_SRCS = xdr.c xdr_rec.c xdr_array.c xdr_float.c \
+	   xdr_mem.c xdr_reference.c xdr_stdio.c
+
+GSS_SRCS = auth_gss.c authgss_prot.c svc_auth_gss.c svc_auth_none.c
+
+BASE_SRCS = auth_none.c auth_unix.c authunix_prot.c bindresvport.c clnt_bcast.c \
         clnt_dg.c clnt_generic.c clnt_perror.c clnt_raw.c clnt_simple.c \
         clnt_vc.c rpc_dtablesize.c getnetconfig.c getnetpath.c getrpcent.c \
         getrpcport.c mt_misc.c pmap_clnt.c pmap_getmaps.c pmap_getport.c \
@@ -52,44 +57,30 @@ libtirpc_la_SOURCES = auth_none.c auth_unix.c authunix_prot.c bindresvport.c cln
         svc_raw.c svc_run.c svc_simple.c svc_vc.c getpeereid.c \
         auth_time.c auth_des.c authdes_prot.c
 
+libtirpc_la_SOURCES = $(BASE_SRCS)
+libtirpc_la_CFLAGS = $(AM_CFLAGS)
+libtirpc_la_CPPFLAGS = $(AM_CPPFLAGS)
+
 ## XDR
-libtirpc_la_SOURCES += xdr.c xdr_rec.c xdr_array.c xdr_float.c xdr_mem.c xdr_reference.c xdr_stdio.c
+libtirpc_la_SOURCES += $(XDR_SRCS)
 
 ## Secure-RPC
 if GSS
-    libtirpc_la_SOURCES += auth_gss.c authgss_prot.c svc_auth_gss.c \
-		svc_auth_none.c
+    libtirpc_la_SOURCES += $(GSS_SRCS)
     libtirpc_la_LDFLAGS += $(GSSGLUE_LIBS)
-    libtirpc_la_CFLAGS = -DHAVE_RPCSEC_GSS $(GSSGLUE_CFLAGS)
+    libtirpc_la_CPPFLAGS += -DHAVE_RPCSEC_GSS
+    libtirpc_la_CFLAGS += $(GSSGLUE_CFLAGS)
 endif
 
 ## libtirpc_a_SOURCES += key_call.c key_prot_xdr.c getpublickey.c
-## libtirpc_a_SOURCES += netname.c netnamer.c rpcdname.c \
-## libtirpc_a_SOURCES += rtime.c \
-## auth_time.c auth_des.c authdes_prot.c 
+## libtirpc_a_SOURCES += netname.c netnamer.c rpcdname.c
+## libtirpc_a_SOURCES += rtime.c
+
+libtirpc_la_DEPS = $(BASE_SRCS) $(XDR_SRCS)
 
 if GSS
-$(libtirpc_la_OBJECTS) :auth_none.c auth_unix.c authunix_prot.c bindresvport.c clnt_bcast.c \
-        clnt_dg.c clnt_generic.c clnt_perror.c clnt_raw.c clnt_simple.c \
-        clnt_vc.c rpc_dtablesize.c getnetconfig.c getnetpath.c getrpcent.c \
-        getrpcport.c mt_misc.c pmap_clnt.c pmap_getmaps.c pmap_getport.c \
-        pmap_prot.c pmap_prot2.c pmap_rmt.c rpc_prot.c rpc_commondata.c \
-        rpc_callmsg.c rpc_generic.c rpc_soc.c rpcb_clnt.c rpcb_prot.c \
-        rpcb_st_xdr.c svc.c svc_auth.c svc_dg.c svc_auth_unix.c svc_generic.c \
-        svc_raw.c svc_run.c svc_simple.c svc_vc.c \
-	xdr.c xdr_rec.c xdr_array.c xdr_float.c xdr_mem.c xdr_reference.c xdr_stdio.c \
-	auth_gss.c authgss_prot.c svc_auth_gss.c getpeereid.c \
-	auth_time.c auth_des.c authdes_prot.c svc_auth_none.c
-        
-else
-$(libtirpc_la_OBJECTS) :auth_none.c auth_unix.c authunix_prot.c bindresvport.c clnt_bcast.c \
-        clnt_dg.c clnt_generic.c clnt_perror.c clnt_raw.c clnt_simple.c \
-        clnt_vc.c rpc_dtablesize.c getnetconfig.c getnetpath.c getrpcent.c \
-        getrpcport.c mt_misc.c pmap_clnt.c pmap_getmaps.c pmap_getport.c \
-        pmap_prot.c pmap_prot2.c pmap_rmt.c rpc_prot.c rpc_commondata.c \
-        rpc_callmsg.c rpc_generic.c rpc_soc.c rpcb_clnt.c rpcb_prot.c \
-        rpcb_st_xdr.c svc.c svc_auth.c svc_dg.c svc_auth_unix.c svc_generic.c \
-        svc_raw.c svc_run.c svc_simple.c svc_vc.c \
-	xdr.c xdr_rec.c xdr_array.c xdr_float.c xdr_mem.c xdr_reference.c xdr_stdio.c \
-	getpeereid.c auth_time.c auth_des.c authdes_prot.c
+libtirpc_la_DEPS += $(GSS_SRCS)
 endif
+
+$(libtirpc_la_OBJECTS) : $(libtirpc_la_DEPS)
+
