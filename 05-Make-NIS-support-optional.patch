diff --git a/configure.ac b/configure.ac
index 28beb70..ebafefc 100644
--- a/configure.ac
+++ b/configure.ac
@@ -28,7 +28,22 @@ LT_INIT([win32-dll])
 AC_HEADER_DIRENT
 AC_PREFIX_DEFAULT(/usr)
 AC_CHECK_HEADERS([arpa/inet.h fcntl.h libintl.h limits.h locale.h netdb.h netinet/in.h stddef.h stdint.h stdlib.h string.h sys/ioctl.h sys/param.h sys/socket.h sys/time.h syslog.h unistd.h])
+AC_CHECK_HEADER([rpcsvc/nis.h],
+	# traditional 'have a header' symbol
+	[AC_DEFINE([HAVE_RPCSVC_NIS_H], [1],
+		[Define to 1 if you have <rpcsvc/nis.h>.])
+	# but use this symbol to indicate that TI-RPC should be NIS-aware
+	AC_DEFINE([HAVE_NIS], [1],
+		[Define to 1 if you have <rpcsvc/nis.h> and want an NIS-aware TI-RPC])
+	tirpc_has_nis=yes],
+	[tirpc_has_nis=no])
+AM_CONDITIONAL(HAVE_NIS, test x$tirpc_has_nis = xyes)
+
 AC_CHECK_LIB([pthread], [pthread_create])
+# Only add -lnsl if needed, for yp_match
+AC_CHECK_FUNC([yp_match], , AC_CHECK_LIB([nsl], [yp_match]))
+# Only add -lsocket if needed, for setsockopt
+AC_CHECK_FUNC([setsockopt], , AC_CHECK_LIB([socket], [setsockopt]))
 
 
 AC_CONFIG_FILES([Makefile src/Makefile man/Makefile doc/Makefile])
diff --git a/src/Makefile.am b/src/Makefile.am
index daa6202..9bb2474 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -40,11 +40,13 @@ lib_LTLIBRARIES = libtirpc.la
 # release number of your package. This is an abuse that only fosters
 # misunderstanding of the purpose of library versions."
 #
-libtirpc_la_LDFLAGS = -lnsl -lpthread -version-info 1:10:0 -no-undefined
+libtirpc_la_LDFLAGS = -version-info 1:10:0 -no-undefined
 
 XDR_SRCS = xdr.c xdr_rec.c xdr_array.c xdr_float.c \
 	   xdr_mem.c xdr_reference.c xdr_stdio.c
 
+NIS_SRCS = auth_time.c auth_des.c
+
 GSS_SRCS = auth_gss.c authgss_prot.c svc_auth_gss.c svc_auth_none.c
 
 BASE_SRCS = auth_none.c auth_unix.c authunix_prot.c bindresvport.c clnt_bcast.c \
@@ -55,19 +57,25 @@ BASE_SRCS = auth_none.c auth_unix.c authunix_prot.c bindresvport.c clnt_bcast.c
         rpc_callmsg.c rpc_generic.c rpc_soc.c rpcb_clnt.c rpcb_prot.c \
         rpcb_st_xdr.c svc.c svc_auth.c svc_dg.c svc_auth_unix.c svc_generic.c \
         svc_raw.c svc_run.c svc_simple.c svc_vc.c getpeereid.c \
-        auth_time.c auth_des.c authdes_prot.c
+        authdes_prot.c
 
 libtirpc_la_SOURCES = $(BASE_SRCS)
 libtirpc_la_CFLAGS = $(AM_CFLAGS)
 libtirpc_la_CPPFLAGS = $(AM_CPPFLAGS)
+libtirpc_la_LIBADD = $(LIBS)
 
 ## XDR
 libtirpc_la_SOURCES += $(XDR_SRCS)
 
+## NIS
+if HAVE_NIS
+libtirpc_la_SOURCES += $(NIS_SRCS)
+endif
+
 ## Secure-RPC
 if GSS
     libtirpc_la_SOURCES += $(GSS_SRCS)
-    libtirpc_la_LDFLAGS += $(GSSGLUE_LIBS)
+    libtirpc_la_LIBADD += $(GSSGLUE_LIBS)
     libtirpc_la_CPPFLAGS += -DHAVE_RPCSEC_GSS
     libtirpc_la_CFLAGS += $(GSSGLUE_CFLAGS)
 endif
@@ -78,6 +86,10 @@ endif
 
 libtirpc_la_DEPS = $(BASE_SRCS) $(XDR_SRCS)
 
+if HAVE_NIS
+libtirpc_la_DEPS += $(NIS_SRCS)
+endif
+
 if GSS
 libtirpc_la_DEPS += $(GSS_SRCS)
 endif
diff --git a/src/rpc_soc.c b/src/rpc_soc.c
index bef5c2c..ccf337c 100644
--- a/src/rpc_soc.c
+++ b/src/rpc_soc.c
@@ -479,6 +479,7 @@ clnt_broadcast(prog, vers, proc, xargs, argsp, xresults, resultsp, eachresult)
 	    (resultproc_t) rpc_wrap_bcast, "udp");
 }
 
+#ifdef HAVE_NIS
 /*
  * Create the client des authentication object. Obsoleted by
  * authdes_seccreate().
@@ -510,6 +511,7 @@ fallback:
 	dummy = authdes_seccreate(servername, window, NULL, ckey);
 	return (dummy);
 }
+#endif /* HAVE_NIS */
 
 /*
  * Create a client handle for a unix connection. Obsoleted by clnt_vc_create()
